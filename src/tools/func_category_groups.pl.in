#!@PERLPATH@
#
#  FUNC - Functional Analysis of Gene Expression Data
#  Copyright (C) 2002  Bjoern Muetzel, Kay Pruefer
#  
#  This program is modifiable/redistributable under the terms of the
#  GNU General Public License.
# 
#  You should have received a copy of the GNU General Public License
#  along with this program; see the file COPYING. If not, write to the
#  Free Software Foundation, Inc., 59 Temple Place - Suite 330,
#  Boston, MA 02111-1307, USA.
# 

# Params: - term.txt (termdb_tables)
#	  - profile (optional)
# stdin:  - file with GO-IDs and data
# stdout: - file with GO-taxonomies, GO-names and GO-IDs + data

use strict ;

open TERM, "$ARGV[0]" or die "Cannot open $ARGV[0]" ;

my %term = () ;

while ( <TERM> ) {
	chomp ;
	my @r = split /\t/ ;
	$term{$r[3]} = "$r[2]\t$r[1]"
}

close TERM ;

open PROFILE, "$ARGV[1]" ; # can be ommitted

my %prof = () ;

while ( <PROFILE> ) {
	chomp ;
	my @r = split /\t/ ;
	my $grname = $r[0] ;
	splice @r, 0, 1 ;
	$prof{$grname} = join "\t", @r ;
}

close PROFILE ;

                                                                                                                                           
my $break_out_of_the_while_loop_if_this_variable_is_set_to_one = 0 ;

# read groups with p-vals from resultfile, attach profile data of group, print.
while ( <STDIN> ) {
        chomp ;
        my @r = split /\t/ ;
        last if ( @r < 5 && $break_out_of_the_while_loop_if_this_variable_is_set_to_one ) ;
        if ( @r > 4 ) { 
                $break_out_of_the_while_loop_if_this_variable_is_set_to_one = 1 ;
                my @r2 = split /\t/,$term{$r[0]} ;
                print "$r2[0]\t$r2[1]\t$r[0]\t" ;
                unless ( $prof{$r[0]} eq "" ) {
                        print $prof{$r[0]} , "\t" ;
                } ;
                splice @r, 0, 1 ;
                print join "\t", @r, "\n" ;
        }
}
